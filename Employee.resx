<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgUserInfo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>